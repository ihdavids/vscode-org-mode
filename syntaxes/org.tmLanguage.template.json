{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Org Markup",
    "patterns": [
        {
            "name": "markup.heading.org",
            "begin": "^\\s*[*]{1}\\s+",
            "end": "$",
            "patterns": [
                {
                    "include": "#header-matches"
                }
            ]
        },
        {
            "name": "entity.name.type.org",
            "begin": "^\\s*([*])[*]\\s+",
            "end": "$",
            "captures": {
                "1": { "name": "keyword.control.block.org.empty" }
            },
            "patterns": [
                {
                    "include": "#header-matches"
                }
            ]
        },
        {
            "name": "entity.name.function.org",
            "begin": "^\\s*([*]{2})[*]\\s+",
            "end": "$",
            "captures": {
                "1": { "name": "keyword.control.block.org.empty" }
            },
            "patterns": [
                {
                    "include": "#header-matches"
                }
            ]
        },
        {
            "name": "entity.other.attribute-name.org",
            "begin": "^\\s*([*]{3})[*]\\s+",
            "end": "$",
            "captures": {
                "1": { "name": "keyword.control.block.org.empty" }
            },
            "patterns": [
                {
                    "include": "#header-matches"
                }
            ]
        },
        {
            "include": "#common"
        },
        {
            "include": "#src-blocks"
        },
        {
            "include": "#blocks"
        },
        {
            "include": "#checkbox"
        },
        {
            "include": "#misc"
        },
        {
            "include": "#agenda"
        }
    ],
    "repository": {
        "src-blocks": {
            "patterns": "// Dynamically Generated"
        },
        "blocks": {
            "patterns": [
                {
                    "name": "meta.block.${2:/downcase}",
                    "begin": "(?i)(?:^|\\G)(?:\\s*)(#\\+BEGIN_(\\w+))\\b\\s*(.*)$",
                    "end": "(?i)(?:^|\\G)(?:\\s*)(#\\+END_\\2)\\s*$",
                    "beginCaptures": {
                        "1": {
                            "name": "keyword.control.block.org"
                        },
                        "3": {
                            "name": "string.other.header-args.org"
                        }
                    },
                    "endCaptures": {
                        "1": {
                            "name": "keyword.control.block.org"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#common"
                        }
                    ]
                }
            ]
        },
        "common": {
            "patterns": [
                {
                    "include": "#timestamp"
                },
                {
                    "include": "#link"
                },
                {
                    "include": "#bold"
                },
                {
                    "include": "#italic"
                },
                {
                    "include": "#underline"
                },
                {
                    "include": "#literal"
                },
                {
                    "include": "#code"
                },
                {
                    "include": "#verbatim"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#keywords"
                }
            ]
        },
        "header-matches": {
            "patterns": [
                {
                    "include": "#common"
                },
                {
                    "include": "#todo"
                },
                {
                    "include": "#done"
                },
                {
                    "include": "#userKeywords"
                }
            ]
        },
        "datetime": {
            "patterns": [
                {
                    "name": "variable.org",
                    "match": "\\d{4}-\\d{1,2}-\\d{1,2}(?:\\s*\\w{3})?\\s*(\\d{2}\\:\\d{2}(-\\d{2}\\:\\d{2})?)?\\s*([+]*\\d[wdmy])?"
                }
            ]
        },
        "timestamp": {
            "patterns": [
                {
                    "name": "variable.org",
                    "match": "\\[\\d{4}-\\d{1,2}-\\d{1,2}(?: \\w{3})?\\]"
                }
            ]
        },
        "link": {
            "patterns": [
                {
                    "name": "meta.link.inline.org",
                    "match": "(\\[\\[)([^\\[\\]]+)(\\])(?:(\\[)([^\\[\\]]+)(\\]))?(\\])",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.string.begin.org"
                        },
                        "2": {
                            "name": "markup.underline.link.org"
                        },
                        "3": {
                            "name": "punctuation.definition.string.end.org"
                        },
                        "4": {
                            "name": "punctuation.definition.string.begin.org"
                        },
                        "5": {
                            "name": "string.other.link.title.org"
                        },
                        "6": {
                            "name": "punctuation.definition.string.end.org"
                        },
                        "7": {
                            "name": "punctuation.definition.string.end.org"
                        },
                        "8": {
                            "name": "punctuation.definition.string.end.org"
                        }
                    }
                }
            ]
        },
        "todo": {
            "patterns": [
                {
                    "name": "invalid.illegal.org",
                    "match": "\\bTODO\\b"
                }
            ]
        },
        "done": {
            "patterns": [
                {
                    "name": "keyword.control.org",
                    "match": "\\bDONE\\b"
                }
            ]
        },
        "userKeywords": {
            "patterns": [
                {
                    "name": "string.quoted.double.org",
                    "match": "\\b([A-Z]{3,})\\b"
                }
            ]
        },
        "bold": {
            "patterns": [
                {
                    "name": "markup.bold.org",
                    "match": "(^|\\s)\\*[^\\s](.*?[^\\s])?\\*($|\\W)"
                }
            ]
        },
        "italic": {
            "patterns": [
                {
                    "name": "markup.italic.org",
                    "match": "(^|\\s)\/[^\\s](.*?[^\\s])?\/($|\\W)"
                }
            ]
        },
        "underline": {
            "patterns": [
                {
                    "name": "markup.underline.org",
                    "match": "(^|\\s)\\_[^\\s](.*?[^\\s])?\\_($|\\W)"
                }
            ]
        },
        "literal": {
            "patterns": [
                {
                    "name": "markup.italic.org",
                    "match": "^:.+"
                }
            ]
        },
        "code": {
            "patterns": [
                {
                    "name": "variable.org",
                    "match": "(^|\\s)\\~[^\\s](.*?[^\\s])?\\~($|\\W)"
                }
            ]
        },
        "verbatim": {
            "patterns": [
                {
                    "name": "variable.org",
                    "match": "(^|\\s)\\=[^\\s](.*?[^\\s])?\\=($|\\W)"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "match": "(^|\\s)(#)\\s(.*)$",
                    "captures": {
                        "2": {
                            "name": "punctuation.definition.comment"
                        },
                        "3": {
                            "name": "comment.line"
                        }
                    }
                }
            ]
        },
        "agenda": {
            "patterns": [
                {
                    "begin": "(DEADLINE:)\\s+\\<\\s*",
                    "end": "\\s*\\>",
                    "captures": {
                        "1": {"name":"support.type.property-name.org.statekeyword"}
                    },
                    "patterns": [{ "include": "#datetime" }]
                },
                {
                    "begin": "(SCHEDULED:)\\s+\\<\\s*",
                    "end": "\\s*\\>",
                    "captures": {
                        "1": {"name":"support.type.property-name.org.statekeyword"}
                    },
                    "patterns": [{ "include": "#datetime" }]
                },
                {
                    "begin": "(CLOSED:)\\s+\\[\\s*",
                    "end": "\\s*\\]",
                    "captures": {
                        "1": {"name":"support.type.property-name.org.statekeyword"}
                    },
                    "patterns": [{ "include": "#datetime" }]
                }
            ]
        },
        "checkbox": {
            "patterns": [
                {
                    "match": "(\\[[ ]\\])\\s?",
                    "name": "keyword.control.org.checkbox"
                },
                {
                    "match": "(\\[[xX]\\])\\s?",
                    "name": "keyword.control.org.checkbox.checked"
                },
                {
                    "match": "(\\[\\d*[/%]\\d*\\])",
                    "name": "keyword.control.org.checkbox.summary"
                },
                {
                    "match": "(\\[[-]\\])\\s?",
                    "name": "keyword.control.org.checkbox.inprogress"
                }
            ]
        },
        "misc": {
            "patterns": [
                {
                    "match": "\\b([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})\\b",
                    "name": "keyword.control.org.email"   
                },
                {
                    "match": "\\{(\\d+)\\}",
                    "name": "keyword.number.org.link.internal.number"   
                },
                {
                    "match": "\\{\\{(.+?)\\}\\}",
                    "name": "keyword.control.org.link.internal.headline"   
                },
                {
                    "match": "(^|\\s):[\\w\\d:]+:",
                    "name": "keyword.control.org.tags"   
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "^(#\\+\\w+:)\\s(.*)$",
                    "captures": {
                        "1": {
                            "name": "support.type.property-name.org"
                        },
                        "2": {
                            "name": "meta.structure.dictionary.value.org"
                        }
                    }
                }
            ]
        }
    },
    "scopeName": "source.org"
}